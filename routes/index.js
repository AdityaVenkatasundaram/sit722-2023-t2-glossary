var express = require('express');
var router = express.Router();

const glossary_list = [
  {'id': 1, 'Term': 'DevOps', 'Description': 'DevOps is an approach to working that emphasizes the quick, incremental, and continuous delivery of products', 'reference': 'https://www.coursera.org'},
  {'id': 2, 'Term': 'Kubernetes', 'Description': 'Kubernetes automates operational tasks of container management and includes built-in commands for deploying applications, rolling out changes to your applications, scaling your applications up and down to fit changing needs, monitoring your applications, and moreâ€”making it easier to manage applications', 'reference': 'cloud.google.com'},
  {'id': 3, 'Term': 'Lean', 'Description': 'Lean agile is a development method that helps teams identify waste and refine processes. It\'s a guiding mindset that facilitates efficiency, effectiveness, and continuous improvement', 'reference': 'easyagile.com'},
  {'id': 4, 'Term': 'Microservices', 'Description': 'Microservices are an architectural and organizational approach to software development where software is composed of small independent services that communicate over well-defined APIs. These services are owned by small, self-contained teams', 'reference': 'https://aws.amazon.com/microservices/'},
  {'id': 5, 'Term': 'Version Control System(VCS)', 'Description': 'Version control, also known as source control, is the practice of tracking and managing changes to software code. Version control systems are software tools that help software teams manage changes to source code over time', 'reference': 'https://www.atlassian.com/git/tutorials/what-is-version-control'},
  {'id': 6, 'Term': 'DevSecOps', 'Description': 'DevSecOps is a development practice that integrates security initiatives at every stage of the software development lifecycle to deliver robust and secure applications. DevSecOps infuses security into the continuous integration and continuous delivery (CI/CD) pipeline, allowing development teams to address some of today\'s most pressing security challenges at DevOps speed', 'reference': 'vmware.com'},
  {'id': 7, 'Term': 'Dockerization', 'Description': 'Dockerization involves packaging an application in a Docker image to run in one or more containers. Dockerizing an application involves specifying everything needed to run the application in a Dockerfile and then using the file to build a specialized Docker image that can be shared to multiple machines', 'reference': 'blog.appsignal.com'},
  {'id': 8, 'Term': 'Jenkins', 'Description': 'Jenkins is an open-source automation tool written in Java with plugins built for continuous integration. Jenkins is used to build and test your software projects continuously making it easier for developers to integrate changes to the project, and making it easier for users to obtain a fresh build ', 'reference': 'edureka.com'},
  {'id': 9, 'Term': 'Scrum', 'Description': 'Scrum is an agile project management framework that helps teams structure and manage their work through a set of values, principles, and practices ', 'reference': 'https://www.atlassian.com/agile/scrum'},
  {'id': 10, 'Term': 'Feature Driven Development (FDD)', 'Description': 'Feature-Driven Development (FDD) is customer-centric, iterative, and incremental, with the goal of delivering tangible software results often and efficiently. FDD in Agile encourages status reporting at all levels, which helps to track progress and results. FDD allows teams to update the project regularly and identify errors quickly', 'reference': 'https://www.planview.com/resources/articles/fdd-agile/'},
  {'id': 11, 'Term': 'Technical Debt', 'Decription': 'It is the implied cost incurred when businesses do not fix problems that will affect them in the future. Accruing technical debt causes existing problems to get worse over time. The longer debt builds up, the more costly it becomes to rectify.', 'reference': 'https://www.techtarget.com'},
  {'id': 12, 'Term': 'Minimum Viable Product(MVP)', 'Decription': 'An MVP is a concept from agile scrum that refers to a product that has just enough features to satisfy the needs of early customers and, more importantly, give them something to provide feedback on to shape the future of the product.', 'reference': 'https://www.farreachinc.com/blog/mvp-agile-software-development'},
  {'id': 13, 'Term': 'Everything as Code (EaC)', 'Decription': 'is an approach to software development and DevOps that uses code to define and manage IT resources. Here various aspects of the software development lifecycle, infrastructure provisioning, and system configuration are managed and automated through code', 'reference': 'https://octopus.com/blog/'},
  {'id': 14, 'Term': 'PrePod', 'Decription': 'Preprod is a process by which an organization prepares the environment and infrastructure for each release by performing tests on applications before deployment to production. It encompasses all the processes that prepare an application for deployment, such as automated testing, release management, design and architecture, quality assurance testing, and monitoring. Preproduction ensures production readiness, where the company and its departments prepare the environment for each release.', 'reference': 'https://www.enov8.com/blog/preprod-done-right-the-definitive-guide'},
  {'id': 15, 'Term': 'Infrastructure as Code (IaC)', 'Decription': 'Infrastructure as Code (IaC) is the managing and provisioning of infrastructure through code instead of through manual processes. With IaC, configuration files are created that contain your infrastructure specifications, which makes it easier to edit and distribute configurations. It also ensures that you provision the same environment every time.', 'reference': 'https://www.redhat.com/en/topics/automation/'},
  {'id': 16, 'Term': 'Behaviour-Driven Design (BDD)', 'Decription': 'BDD is a process designed to aid the management and the delivery of software development projects by improving communication between engineers and business professionals. In so doing, BDD ensures all development projects remain focused on delivering what the business actually needs while meeting all requirements of the user', 'reference': 'https://inviqa.com/blog/bdd-guide'},
  {'id': 17, 'Term': 'Test-Driven Design (TDD)', 'Decription': 'TDD is a software development practice that focuses on creating unit test cases before developing the actual code. It is an iterative approach combining programming, unit test creation, and refactoring.', 'reference': 'https://www.browserstack.com/guide/what-is-test-driven-development'},
  {'id': 18, 'Term': 'Continuous Integration (CI)', 'Decription': 'Continuous integration (CI) is the practice of automating the integration of code changes from multiple contributors into a single software project. Its a primary DevOps best practice, allowing developers to frequently merge code changes into a central repository where builds and tests then run. Automated tools are used to assert the new codes correctness before integration.', 'reference': 'https://www.atlassian.com/continuous-delivery/continuous-integration'},
  {'id': 19, 'Term': 'Continuous Deployment (CD)', 'Decription': 'Continuous deployment is a strategy in software development where code changes to an application are released automatically into the production environment. This automation is driven by a series of predefined tests. Once new updates pass those tests, the system pushes the updates directly to the softwares users.', 'reference': 'https://www.ibm.com/topics/continuous-deployment'},
  {'id': 20, 'Term': 'Chaos Engineering', 'Decription': 'Chaos engineering is a method of testing distributed software that deliberately introduces failure and faulty scenarios to verify its resilience in the face of random disruptions. These disruptions can cause applications to respond unpredictably and break under pressure.', 'reference': 'https://www.dynatrace.com/news/blog/what-is-chaos-engineering/'},
];

router.get('/', function (req, res, next) {
  res.render('index', { title: 'SIT 722 DevOps Glossary', glossary: glossary_list });
});

module.exports = router;

