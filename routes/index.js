var express = require('express');
var router = express.Router();

const glossary_list = [
  {'id': 1, 'Term': 'DevOps', 'Description': 'DevOps is an approach to working that emphasizes the quick, incremental, and continuous delivery of products', 'reference': 'https://www.coursera.org'},
  {'id': 2, 'Term': 'Kubernetes', 'Description': 'Kubernetes automates operational tasks of container management and includes built-in commands for deploying applications, rolling out changes to your applications, scaling your applications up and down to fit changing needs, monitoring your applications, and more—making it easier to manage applications', 'reference': 'cloud.google.com'},
  {'id': 3, 'Term': 'Lean', 'Description': 'Lean agile is a development method that helps teams identify waste and refine processes. It\'s a guiding mindset that facilitates efficiency, effectiveness, and continuous improvement', 'reference': 'easyagile.com'},
  {'id': 4, 'Term': 'Microservices', 'Description': 'Microservices are an architectural and organizational approach to software development where software is composed of small independent services that communicate over well-defined APIs. These services are owned by small, self-contained teams', 'reference': 'https://aws.amazon.com/microservices/'},
  {'id': 5, 'Term': 'Version Control System(VCS)', 'Description': 'Version control, also known as source control, is the practice of tracking and managing changes to software code. Version control systems are software tools that help software teams manage changes to source code over time', 'reference': 'https://www.atlassian.com/git/tutorials/what-is-version-control'},
  {'id': 6, 'Term': 'DevSecOps', 'Description': 'DevSecOps is a development practice that integrates security initiatives at every stage of the software development lifecycle to deliver robust and secure applications. DevSecOps infuses security into the continuous integration and continuous delivery (CI/CD) pipeline, allowing development teams to address some of today\'s most pressing security challenges at DevOps speed', 'reference': 'vmware.com'},
  {'id': 7, 'Term': 'Dockerization', 'Description': 'Dockerization involves packaging an application in a Docker image to run in one or more containers. Dockerizing an application involves specifying everything needed to run the application in a Dockerfile and then using the file to build a specialized Docker image that can be shared to multiple machines', 'reference': 'blog.appsignal.com'},
  {'id': 8, 'Term': 'Jenkins', 'Description': 'Jenkins is an open-source automation tool written in Java with plugins built for continuous integration. Jenkins is used to build and test your software projects continuously making it easier for developers to integrate changes to the project, and making it easier for users to obtain a fresh build ', 'reference': 'edureka.com'},
  {'id': 9, 'Term': 'Scrum', 'Description': 'Scrum is an agile project management framework that helps teams structure and manage their work through a set of values, principles, and practices ', 'reference': 'https://www.atlassian.com/agile/scrum'},
  {'id': 10, 'Term': 'Feature Driven Development (FDD)', 'Description': 'Feature-Driven Development (FDD) is customer-centric, iterative, and incremental, with the goal of delivering tangible software results often and efficiently. FDD in Agile encourages status reporting at all levels, which helps to track progress and results. FDD allows teams to update the project regularly and identify errors quickly', 'reference': 'https://www.planview.com/resources/articles/fdd-agile/'},
  {'id': 11, 'Term': 'Technical Debt', 'Description': 'It is the implied cost incurred when businesses do not fix problems that will affect them in the future. Accruing technical debt causes existing problems to get worse over time. The longer debt builds up, the more costly it becomes to rectify.', 'reference': 'https://www.techtarget.com'},
  {'id': 12, 'Term': 'Minimum Viable Product(MVP)', 'Description': 'An MVP is a concept from agile scrum that refers to a product that has just enough features to satisfy the needs of early customers and, more importantly, give them something to provide feedback on to shape the future of the product.', 'reference': 'https://www.farreachinc.com/blog/mvp-agile-software-development'},
  {'id': 13, 'Term': 'Everything as Code (EaC)', 'Description': 'is an approach to software development and DevOps that uses code to define and manage IT resources. Here various aspects of the software development lifecycle, infrastructure provisioning, and system configuration are managed and automated through code', 'reference': 'https://octopus.com/blog/'},
  {'id': 14, 'Term': 'PrePod', 'Description': 'Preprod is a process by which an organization prepares the environment and infrastructure for each release by performing tests on applications before deployment to production. It encompasses all the processes that prepare an application for deployment, such as automated testing, release management, design and architecture, quality assurance testing, and monitoring. Preproduction ensures production readiness, where the company and its departments prepare the environment for each release.', 'reference': 'https://www.enov8.com/blog/preprod-done-right-the-definitive-guide'},
  {'id': 15, 'Term': 'Infrastructure as Code (IaC)', 'Description': 'Infrastructure as Code (IaC) is the managing and provisioning of infrastructure through code instead of through manual processes. With IaC, configuration files are created that contain your infrastructure specifications, which makes it easier to edit and distribute configurations. It also ensures that you provision the same environment every time.', 'reference': 'https://www.redhat.com/en/topics/automation/'},
  {'id': 16, 'Term': 'Behaviour-Driven Design (BDD)', 'Description': 'BDD is a process designed to aid the management and the delivery of software development projects by improving communication between engineers and business professionals. In so doing, BDD ensures all development projects remain focused on delivering what the business actually needs while meeting all requirements of the user', 'reference': 'https://inviqa.com/blog/bdd-guide'},
  {'id': 17, 'Term': 'Test-Driven Design (TDD)', 'Description': 'TDD is a software development practice that focuses on creating unit test cases before developing the actual code. It is an iterative approach combining programming, unit test creation, and refactoring.', 'reference': 'https://www.browserstack.com/guide/what-is-test-driven-development'},
  {'id': 18, 'Term': 'Continuous Integration (CI)', 'Description': 'Continuous integration (CI) is the practice of automating the integration of code changes from multiple contributors into a single software project. Its a primary DevOps best practice, allowing developers to frequently merge code changes into a central repository where builds and tests then run. Automated tools are used to assert the new codes correctness before integration.', 'reference': 'https://www.atlassian.com/continuous-delivery/continuous-integration'},
  {'id': 19, 'Term': 'Continuous Deployment (CD)', 'Description': 'Continuous deployment is a strategy in software development where code changes to an application are released automatically into the production environment. This automation is driven by a series of predefined tests. Once new updates pass those tests, the system pushes the updates directly to the softwares users.', 'reference': 'https://www.ibm.com/topics/continuous-deployment'},
  {'id': 20, 'Term': 'Chaos Engineering', 'Description': 'Chaos engineering is a method of testing distributed software that deliberately introduces failure and faulty scenarios to verify its resilience in the face of random disruptions. These disruptions can cause applications to respond unpredictably and break under pressure.', 'reference': 'https://www.dynatrace.com/news/blog/what-is-chaos-engineering/'},
  {'id': 21, 'Term': 'Kanban', 'Description': 'Kanban is a popular Lean workflow management method for defining, managing, and improving services that deliver knowledge work. It helps you visualize work, maximize efficiency, and improve continuously. Work is represented on Kanban boards, allowing you to optimize work delivery across multiple teams and handle even the most complex projects in a single environment.', 'reference': 'https://kanbanize.com/kanban-resources/getting-started/'},
  {'id': 22, 'Term': 'macvlan network', 'Description': 'macvlan is a local scope network driver which is configured per-host. As a result, there are stricter dependencies between MACVLAN and external networks, which is both a constraint and an advantage that is different from overlay or bridge. The macvlan driver uses the concept of a parent interface', 'reference': 'https://dockerlabs.collabnix.com/intermediate'},
  {'id': 23, 'Term': 'One-to-Many Communication ', 'Description': ' One-to-many communication refers to a communicative act in which only one special person is entitled to be the sender and is allowed to publish information. In many-to-many communication, however, each participating person can post messages and each person can receive messages.', 'reference': 'https://www.igi-global.com/dictionary/'},
  {'id': 24, 'Term': 'Source Code Management (SCM)', 'Description': 'Source code management (SCM) is used to track modifications to a source code repository. SCM tracks a running history of changes to a code base and helps resolve conflicts when merging updates from multiple contributors. SCM is also synonymous with Version control. ', 'reference': 'https://www.atlassian.com/git/tutorials/source-code-management'},
  {'id': 25, 'Term': 'Secure Socket Shell (SSH) keys', 'Description': 'An SSH key is an access credential in the SSH protocol. Its function is similar to that of user names and passwords, but the keys are primarily used for automated processes and for implementing single sign-on by system administrators and power users.', 'reference': 'https://www.ssh.com/academy/ssh-keys'},
  {'id': 26, 'Term': 'Product Oriented Delivery (Pod)', 'Description': 'This refers to a cross-functional team of business and technology professionals who works as a single unit to handle all aspects of development and maintenance. In a POD team, isolation between group members is broken down, and the team works in a “we build it, we own it” mindset. There is no time-consuming handoff between individual teams, allowing organizations to be more agile than ever.', 'reference': 'https://inclusioncloud.com/insights/blog/agile-pod-teams'},
  {'id': 27, 'Term': 'Terraform', 'Description': 'HashiCorp Terraform is an infrastructure as code tool that lets you define both cloud and on-prem resources in human-readable configuration files that you can version, reuse, and share. You can then use a consistent workflow to provision and manage all of your infrastructure throughout its lifecycle. Terraform can manage low-level components like compute, storage, and networking resources, as well as high-level components like DNS entries and SaaS features.', 'reference': 'https://developer.hashicorp.com/terraform/intro'},
  {'id': 28, 'Term': 'RabbitMQ', 'Description': 'RabbitMQ is a widely used open-source message broker that helps in scaling the application by deploying a message queuing mechanism in between the two applications. It offers temporary storage for data preventing data loss. RabbitMQ Queue takes messages from the publisher and sends them to the consumer.', 'reference': 'https://hevodata.com/learn/rabbitmq-queue/'},
  {'id': 29, 'Term': 'BitBucket', 'Description': 'Bitbucket is a Git-based source code repository hosting service owned by Atlassian. Bitbucket offers both commercial plans and free accounts with an unlimited number of private repositories.', 'reference': 'https://en.wikipedia.org/wiki/Bitbucket'},
  {'id': 30, 'Term': 'Jest', 'Description': 'Jest is a JavaScript testing framework designed to ensure correctness of any JavaScript codebase. It allows you to write tests with an approachable, familiar and feature-rich API that gives you results quickly. ', 'reference': 'https://jestjs.io/'},
  {'id': 31, 'Term': 'Serverless Computing', 'Description': 'Serverless computing enables developers to build applications faster by eliminating the need for them to manage infrastructure. With serverless applications, the cloud service provider automatically provisions, scales, and manages the infrastructure required to run the code.', 'reference': 'https://azure.microsoft.com/en-au/resources/cloud-computing-dictionary'},
  {'id': 32, 'Term': 'Continuous Monitoring', 'Description': 'Continuous monitoring is an approach where an organization constantly monitors its IT systems and networks to detect security threats, performance issues, or non-compliance problems in an automated manner. The goal is to identify potential problems and threats in real time to address them quickly.', 'reference': 'https://www.crowdstrike.com/cybersecurity-101/observability/continuous-monitoring/'},
  {'id': 33, 'Term': 'ChatOps', 'Description': 'ChatOps is a collaboration model that connects people, tools, process, and automation into a transparent workflow. This flow connects the work needed, the work happening, and the work done in a persistent location staffed by the people, bots, and related tools.', 'reference': 'https://www.atlassian.com/incident-management/devops/'},
  {'id': 34, 'Term': 'Serverless Architecture', 'Description': 'A serverless architecture is a way to build and run applications and services without having to manage infrastructure. Your application still runs on servers, but all the server management is done by AWS. You no longer have to provision, scale, and maintain servers to run your applications, databases, and storage systems.', 'reference': 'https://aws.amazon.com/lambda/'},
  {'id': 35, 'Term': 'GitOps', 'Description': 'GitOps is an operational framework that takes DevOps best practices used for application development such as version control, collaboration, compliance, and CI/CD, and applies them to infrastructure automation.', 'reference': 'https://about.gitlab.com/topics/gitops/'},
  {'id': 36, 'Term': 'Artificial Intelligence Ops', 'Description': 'AIOps platforms utilize big data, modern machine learning and other advanced analytics technologies to directly and indirectly enhance IT operations (monitoring, automation and service desk) functions with proactive, personal and dynamic insight. AIOps platforms enable the concurrent use of multiple data sources, data collection methods, analytical (real-time and deep) technologies, and presentation technologies.', 'reference': 'https://www.appdynamics.com/topics/what-is-ai-op'},
  {'id': 37, 'Term': 'Immutable Infrastructure', 'Description': 'Immutable infrastructure is an approach to managing services and software deployments on IT resources wherein components are replaced rather than changed. An application or service is effectively redeployed each time any change occurs.', 'reference': 'https://www.techtarget.com/searchitoperations/'},
  {'id': 38, 'Term': 'Logging', 'Description': 'In computing, logging is the act of keeping a log of events that occur in a computer system, such as problems, errors or just information on current operations. These events may occur in the operating system or in other software. A message or log entry is recorded for each such event. These log messages can then be used to monitor and understand the operation of the system, to debug problems, or during an audit.', 'reference': 'https://en.wikipedia.org/wiki/Logging_(computing)'},
  {'id': 39, 'Term': 'Elasticity', 'Description': 'Elastic computing is the ability to quickly expand or decrease computer processing, memory, and storage resources to meet changing demands without worrying about capacity planning and engineering for peak usage.', 'reference': 'https://azure.microsoft.com/en-au/resources/cloud-computing-dictionary/'},
  {'id': 40, 'Term': 'Service Level Agreement (SLA)', 'Description': 'A service-level agreement (SLA) defines the level of service you expect from a vendor, laying out the metrics by which service is measured, as well as remedies or penalties should agreed-on service levels not be achieved. It is a critical component of any technology vendor contract.', 'reference': 'https://www.cio.com/article/274740/'},
  {'id': 41, 'Term': 'Agile Manifesto', 'Description': 'The Agile Manifesto is a document that sets out the key values and principles behind the Agile philosophy and serves to help development teams work more efficiently and sustainably.', 'reference': 'https://airfocus.com/glossary/'},
  {'id': 42, 'Term': 'Continuous Improvement', 'Description': 'Continuous improvement, sometimes called continual improvement, is the ongoing improvement of products, services or processes through incremental and breakthrough improvements. These efforts can seek "incremental" improvement over time or "breakthrough" improvement all at once.', 'reference': 'https://asq.org/quality-resources/continuous-improvement'},
  {'id': 43, 'Term': 'Deployment Pipeline', 'Description': 'In software development, a deployment pipeline is a system of automated processes designed to quickly and accurately move new code additions and updates from version control to production. In past development environments, manual steps were necessary when writing, building, and deploying code.', 'reference': 'https://www.pagerduty.com/resources/learn/'},
  {'id': 44, 'Term': 'API (Application Programming Interface)', 'Description': 'In the context of APIs, the word Application refers to any software with a distinct function. Interface can be thought of as a contract of service between two applications. This contract defines how the two communicate with each other using requests and responses. ', 'reference': 'https://aws.amazon.com/what-is/api'},
  {'id': 45, 'Term': 'Incident Response Plan', 'Description': 'An incident response plan is a document that outlines an organizations procedures, steps, and responsibilities of its incident response program.', 'reference': 'https://www.crowdstrike.com/cybersecurity-101/incident-response/'},
  {'id': 46, 'Term': 'User Story', 'Description': 'A user story is an informal, general explanation of a software feature written from the perspective of the end user or customer. The purpose of a user story is to articulate how a piece of work will deliver a particular value back to the customer.', 'reference': 'https://www.atlassian.com/agile/'},
  {'id': 47, 'Term': 'Code Review', 'Description': 'Code reviews are methodical assessments of code designed to identify bugs, increase code quality, and help developers learn the source code.', 'reference': 'https://about.gitlab.com/topics/version-control/what-is-code-review/'},
  {'id': 48, 'Term': 'Cloud-Native', 'Description': 'The term cloud native refers to an application that was designed to reside in the cloud from the start. Cloud native involves cloud technologies like microservices, container orchestrators, and auto scaling. A cloud-enabled application doesnt have the flexibility, resiliency, or scalability of its cloud-native counterpart. This is because cloud-enabled applications retain their monolithic structure even though they have moved to the cloud.', 'reference': 'https://aws.amazon.com/'},
  {'id': 49, 'Term': 'Zero-Day Vulnerability', 'Description': 'A zero-day vulnerability is a vulnerability in a system or device that has been disclosed but is not yet patched. An exploit that attacks a zero-day vulnerability is called a zero-day exploit.', 'reference': 'https://www.trendmicro.com/vinfo/us/security/definition/zero-day-vulnerability'},
  {'id': 50, 'Term': 'Load Balancing', 'Description': 'Load balancing is the method of distributing network traffic equally across a pool of resources that support an application. Modern applications must process millions of users simultaneously and return the correct text, videos, images, and other data to each user in a fast and reliable manner. To handle such high volumes of traffic, most applications have many resource servers with duplicate data between them. A load balancer is a device that sits between the user and the server group and acts as an invisible facilitator, ensuring that all resource servers are used equally.', 'reference': 'https://aws.amazon.com/'},
];

router.get('/', function (req, res, next) {
  res.render('index', { title: 'SIT 722 DevOps Glossary', glossary: glossary_list });
});

module.exports = router;

